plugins {
	id("io.micronaut.application") version "4.0.4"
	id("io.micronaut.test-resources") version "4.0.4"
	id("io.micronaut.aot") version "4.0.4"
}

version = "0.1"
group = "com.eng2.assesment.sm"

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor("io.micronaut.data:micronaut-data-processor")
	annotationProcessor("io.micronaut:micronaut-http-validation")
	annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
	implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
	implementation("io.micronaut.kafka:micronaut-kafka")
	implementation("io.micronaut.kafka:micronaut-kafka-streams")
	implementation("io.micronaut.serde:micronaut-serde-jackson")
	implementation("io.micronaut.sql:micronaut-jdbc-hikari")
	compileOnly("io.micronaut:micronaut-http-client")
	runtimeOnly("ch.qos.logback:logback-classic")
	runtimeOnly("org.mariadb.jdbc:mariadb-java-client")
	testImplementation("io.micronaut:micronaut-http-client")
}


application {
	mainClass.set("com.eng2.assesment.sm.Application")
}

graalvmNative.toolchainDetection = false
micronaut {
	runtime("netty")
	testRuntime("junit5")
	processing {
		incremental(true)
		annotations("com.eng2.assesment.sm.*")
	}
	aot {
		// Please review carefully the optimizations enabled below
		// Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
		optimizeServiceLoading = false
		convertYamlToJava = false
		precomputeOperations = true
		cacheEnvironment = true
		optimizeClassLoading = true
		deduceEnvironment = true
		optimizeNetty = true
	}
}
tasks.register("prepareKotlinBuildScriptModel"){}


