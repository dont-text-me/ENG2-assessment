/**
 */
package Y3892609.provider;

import Y3892609.util.MetamodelAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class MetamodelItemProviderAdapterFactory extends MetamodelAdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MetamodelItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.System} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystemItemProvider systemItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.System}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSystemAdapter() {
		if (systemItemProvider == null) {
			systemItemProvider = new SystemItemProvider(this);
		}

		return systemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.Microservice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MicroserviceItemProvider microserviceItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.Microservice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMicroserviceAdapter() {
		if (microserviceItemProvider == null) {
			microserviceItemProvider = new MicroserviceItemProvider(this);
		}

		return microserviceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.KafkaConsumer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KafkaConsumerItemProvider kafkaConsumerItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.KafkaConsumer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKafkaConsumerAdapter() {
		if (kafkaConsumerItemProvider == null) {
			kafkaConsumerItemProvider = new KafkaConsumerItemProvider(this);
		}

		return kafkaConsumerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.KafkaProducer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KafkaProducerItemProvider kafkaProducerItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.KafkaProducer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKafkaProducerAdapter() {
		if (kafkaProducerItemProvider == null) {
			kafkaProducerItemProvider = new KafkaProducerItemProvider(this);
		}

		return kafkaProducerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.KafkaStream} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KafkaStreamItemProvider kafkaStreamItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.KafkaStream}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKafkaStreamAdapter() {
		if (kafkaStreamItemProvider == null) {
			kafkaStreamItemProvider = new KafkaStreamItemProvider(this);
		}

		return kafkaStreamItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.KafkaTopic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KafkaTopicItemProvider kafkaTopicItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.KafkaTopic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKafkaTopicAdapter() {
		if (kafkaTopicItemProvider == null) {
			kafkaTopicItemProvider = new KafkaTopicItemProvider(this);
		}

		return kafkaTopicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.CommandLineClient} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommandLineClientItemProvider commandLineClientItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.CommandLineClient}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommandLineClientAdapter() {
		if (commandLineClientItemProvider == null) {
			commandLineClientItemProvider = new CommandLineClientItemProvider(this);
		}

		return commandLineClientItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.CliCommand} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CliCommandItemProvider cliCommandItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.CliCommand}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCliCommandAdapter() {
		if (cliCommandItemProvider == null) {
			cliCommandItemProvider = new CliCommandItemProvider(this);
		}

		return cliCommandItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.CliOptionJavaEnum} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CliOptionJavaEnumItemProvider cliOptionJavaEnumItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.CliOptionJavaEnum}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCliOptionJavaEnumAdapter() {
		if (cliOptionJavaEnumItemProvider == null) {
			cliOptionJavaEnumItemProvider = new CliOptionJavaEnumItemProvider(this);
		}

		return cliOptionJavaEnumItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.CliArgument} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CliArgumentItemProvider cliArgumentItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.CliArgument}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCliArgumentAdapter() {
		if (cliArgumentItemProvider == null) {
			cliArgumentItemProvider = new CliArgumentItemProvider(this);
		}

		return cliArgumentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.EnumValueCliArgument} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumValueCliArgumentItemProvider enumValueCliArgumentItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.EnumValueCliArgument}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumValueCliArgumentAdapter() {
		if (enumValueCliArgumentItemProvider == null) {
			enumValueCliArgumentItemProvider = new EnumValueCliArgumentItemProvider(this);
		}

		return enumValueCliArgumentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.Entity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityItemProvider entityItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.Entity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityAdapter() {
		if (entityItemProvider == null) {
			entityItemProvider = new EntityItemProvider(this);
		}

		return entityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.DTO} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DTOItemProvider dtoItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.DTO}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDTOAdapter() {
		if (dtoItemProvider == null) {
			dtoItemProvider = new DTOItemProvider(this);
		}

		return dtoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.EntityRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityRelationshipItemProvider entityRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.EntityRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityRelationshipAdapter() {
		if (entityRelationshipItemProvider == null) {
			entityRelationshipItemProvider = new EntityRelationshipItemProvider(this);
		}

		return entityRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.APISchema} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APISchemaItemProvider apiSchemaItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.APISchema}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPISchemaAdapter() {
		if (apiSchemaItemProvider == null) {
			apiSchemaItemProvider = new APISchemaItemProvider(this);
		}

		return apiSchemaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.ClientDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClientDefinitionItemProvider clientDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.ClientDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClientDefinitionAdapter() {
		if (clientDefinitionItemProvider == null) {
			clientDefinitionItemProvider = new ClientDefinitionItemProvider(this);
		}

		return clientDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.HttpGetRequest} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HttpGetRequestItemProvider httpGetRequestItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.HttpGetRequest}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHttpGetRequestAdapter() {
		if (httpGetRequestItemProvider == null) {
			httpGetRequestItemProvider = new HttpGetRequestItemProvider(this);
		}

		return httpGetRequestItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.HttpNonGetRequest} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HttpNonGetRequestItemProvider httpNonGetRequestItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.HttpNonGetRequest}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHttpNonGetRequestAdapter() {
		if (httpNonGetRequestItemProvider == null) {
			httpNonGetRequestItemProvider = new HttpNonGetRequestItemProvider(this);
		}

		return httpNonGetRequestItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.Field} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FieldItemProvider fieldItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.Field}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFieldAdapter() {
		if (fieldItemProvider == null) {
			fieldItemProvider = new FieldItemProvider(this);
		}

		return fieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.IdField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IdFieldItemProvider idFieldItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.IdField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIdFieldAdapter() {
		if (idFieldItemProvider == null) {
			idFieldItemProvider = new IdFieldItemProvider(this);
		}

		return idFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.QueryParamField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryParamFieldItemProvider queryParamFieldItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.QueryParamField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryParamFieldAdapter() {
		if (queryParamFieldItemProvider == null) {
			queryParamFieldItemProvider = new QueryParamFieldItemProvider(this);
		}

		return queryParamFieldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link Y3892609.DbColumnField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DbColumnFieldItemProvider dbColumnFieldItemProvider;

	/**
	 * This creates an adapter for a {@link Y3892609.DbColumnField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDbColumnFieldAdapter() {
		if (dbColumnFieldItemProvider == null) {
			dbColumnFieldItemProvider = new DbColumnFieldItemProvider(this);
		}

		return dbColumnFieldItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (systemItemProvider != null)
			systemItemProvider.dispose();
		if (microserviceItemProvider != null)
			microserviceItemProvider.dispose();
		if (kafkaConsumerItemProvider != null)
			kafkaConsumerItemProvider.dispose();
		if (kafkaProducerItemProvider != null)
			kafkaProducerItemProvider.dispose();
		if (kafkaStreamItemProvider != null)
			kafkaStreamItemProvider.dispose();
		if (kafkaTopicItemProvider != null)
			kafkaTopicItemProvider.dispose();
		if (commandLineClientItemProvider != null)
			commandLineClientItemProvider.dispose();
		if (cliCommandItemProvider != null)
			cliCommandItemProvider.dispose();
		if (cliOptionJavaEnumItemProvider != null)
			cliOptionJavaEnumItemProvider.dispose();
		if (cliArgumentItemProvider != null)
			cliArgumentItemProvider.dispose();
		if (enumValueCliArgumentItemProvider != null)
			enumValueCliArgumentItemProvider.dispose();
		if (entityItemProvider != null)
			entityItemProvider.dispose();
		if (dtoItemProvider != null)
			dtoItemProvider.dispose();
		if (entityRelationshipItemProvider != null)
			entityRelationshipItemProvider.dispose();
		if (apiSchemaItemProvider != null)
			apiSchemaItemProvider.dispose();
		if (clientDefinitionItemProvider != null)
			clientDefinitionItemProvider.dispose();
		if (httpGetRequestItemProvider != null)
			httpGetRequestItemProvider.dispose();
		if (httpNonGetRequestItemProvider != null)
			httpNonGetRequestItemProvider.dispose();
		if (fieldItemProvider != null)
			fieldItemProvider.dispose();
		if (idFieldItemProvider != null)
			idFieldItemProvider.dispose();
		if (queryParamFieldItemProvider != null)
			queryParamFieldItemProvider.dispose();
		if (dbColumnFieldItemProvider != null)
			dbColumnFieldItemProvider.dispose();
	}

}
