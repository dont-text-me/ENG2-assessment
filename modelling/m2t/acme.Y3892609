<?xml version="1.0" encoding="ASCII"?>
<System xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns="Y3892609">
  <services name="video-microservice" description="Stores information about users, videos and hashtags">
    <dtos name="VideoDTO">
      <fields name="authorUsername" type="String"/>
      <fields name="hashtagNames" type="List&lt;String>"/>
      <fields name="title" type="String"/>
    </dtos>
    <dtos name="UserDTO">
      <fields name="username" type="String"/>
    </dtos>
    <dtos name="UserRegisteredMessageValueDTO">
      <fields name="userId" type="UUID"/>
    </dtos>
    <dtos name="VideoInteractionDetailsDTO">
      <fields name="videoTitle" type="String"/>
      <fields name="hashtagNames" type="List&lt;String>"/>
      <fields name="userName" type="String"/>
    </dtos>
    <entities name="Video" incoming="//@services.0/@relationships.1 //@services.0/@relationships.2 //@services.0/@relationships.3" outgoing="//@services.0/@relationships.0 //@services.0/@relationships.4">
      <idField name="id" type="UUID"/>
      <fields name="likeCount" type="Integer"/>
      <fields name="dislikeCount" type="Integer"/>
      <fields name="viewCount" type="Integer"/>
      <fields name="publishedAt" type="Instant"/>
      <fields name="title" type="String" isNullable="false"/>
    </entities>
    <entities name="Hashtag" incoming="//@services.0/@relationships.4">
      <idField name="id" type="String" isAutoGenerated="false"/>
    </entities>
    <entities name="User" incoming="//@services.0/@relationships.0" outgoing="//@services.0/@relationships.1 //@services.0/@relationships.2 //@services.0/@relationships.3">
      <idField name="id" type="UUID"/>
      <fields name="username" type="String" isNullable="false" isUnique="true"/>
    </entities>
    <kafkaProducers name="VideoInteractionProducer" topicsWrittenTo="//@topics.1 //@topics.0 //@topics.2 //@topics.3"/>
    <kafkaProducers name="UserCreationProducer" topicsWrittenTo="//@topics.4"/>
    <relationships description="Video is posted by a user" to="//@services.0/@entities.2" from="//@services.0/@entities.0">
      <toField name="publishedVideos" type="Set&lt;Video>"/>
      <fromField name="author" type="User"/>
    </relationships>
    <relationships type="MANY_TO_MANY" joinTableName="user_video_likes" description="User likes videos" to="//@services.0/@entities.0" from="//@services.0/@entities.2">
      <toField name="likers" type="Set&lt;User>"/>
      <fromField name="likedVideos" type="Set&lt;Video>"/>
    </relationships>
    <relationships type="MANY_TO_MANY" joinTableName="user_video_dislikes" description="User dislikes videos" to="//@services.0/@entities.0" from="//@services.0/@entities.2">
      <toField name="dislikers" type="Set&lt;User>"/>
      <fromField name="dislikedVideos" type="Set&lt;Video>"/>
    </relationships>
    <relationships type="MANY_TO_MANY" joinTableName="" description="User views videos" to="//@services.0/@entities.0" from="//@services.0/@entities.2">
      <toField name="viewers" type="Set&lt;User>"/>
      <fromField name="viewedVideos" type="Set&lt;Video>"/>
    </relationships>
    <relationships type="MANY_TO_MANY" description="Video is tagged with hashtags" isJsonIgnoreFrom="false" to="//@services.0/@entities.1" from="//@services.0/@entities.0">
      <toField name="taggedVideos" type="Set&lt;Video>"/>
      <fromField name="hashtags" type="Set&lt;Hashtag>"/>
    </relationships>
  </services>
  <services name="subscription-microservice" description="Subscribes to events from the video microservice and allows management of user subscriptions as well as receving video recommendations for each user/hashtag pair (if subscribed)">
    <dtos name="UserSubscriptionMessageValueDTO">
      <fields name="hashtagName" type="String"/>
    </dtos>
    <entities name="Video" outgoing="//@services.1/@relationships.0 //@services.1/@relationships.2">
      <idField name="id" type="UUID" isAutoGenerated="false"/>
      <fields name="title" type="String" isNullable="false"/>
      <fields name="viewCount" type="Long" isNullable="false"/>
    </entities>
    <entities name="User" incoming="//@services.1/@relationships.2" outgoing="//@services.1/@relationships.1">
      <idField name="userName" type="String" isAutoGenerated="false"/>
    </entities>
    <entities name="Hashtag" incoming="//@services.1/@relationships.0 //@services.1/@relationships.1">
      <idField name="name" type="String" isAutoGenerated="false"/>
    </entities>
    <kafkaConsumers name="VideoInteractionConsumer" topicsReadFrom="//@topics.2 //@topics.3"/>
    <kafkaConsumers name="UserCreationConsumer" topicsReadFrom="//@topics.4"/>
    <kafkaProducers name="SubscriptionProducer" topicsWrittenTo="//@topics.5 //@topics.6"/>
    <relationships type="MANY_TO_MANY" description="Video is tagged with hashtags" isJsonIgnoreFrom="false" to="//@services.1/@entities.2" from="//@services.1/@entities.0">
      <toField name="taggedVideos" type="Set&lt;Video>"/>
      <fromField name="hashtags" type="Set&lt;Hashtag>"/>
    </relationships>
    <relationships type="MANY_TO_MANY" description="User subscribes to hashtags" isJsonIgnoreFrom="false" to="//@services.1/@entities.2" from="//@services.1/@entities.1">
      <toField name="subscribers" type="Set&lt;User>"/>
      <fromField name="subscriptions" type="Set&lt;Hashtag>"/>
    </relationships>
    <relationships type="MANY_TO_MANY" description="Video is viewed by users" to="//@services.1/@entities.1" from="//@services.1/@entities.0">
      <toField name="viewedVideos" type="Set&lt;Video>"/>
      <fromField name="viewers" type="Set&lt;User>"/>
    </relationships>
  </services>
  <services name="trending-hashtag-microservice" description="Subscribes to events from the video microservice and reports the top 10 most liked hashtags within the last hour">
    <dtos name="WindowedHashtagWithLikeCount">
      <fields name="hashtagName" type="String"/>
      <fields name="likeCount" type="Long"/>
      <fields name="windowStart" type="Long"/>
      <fields name="windowEnd" type="Long"/>
    </dtos>
    <entities name="TrendingHashtag">
      <idField name="id" type="UUID"/>
      <fields name="hashtagName" type="String" isNullable="false"/>
      <fields name="likeCount" type="Long" isNullable="false"/>
      <fields name="windowStart" type="Long" isNullable="false"/>
      <fields name="windowEnd" type="Long" isNullable="false"/>
    </entities>
    <kafkaConsumers name="TrendingHashtagsSummaryConsumer" topicsReadFrom="//@topics.7"/>
    <kafkaStreams name="TrendingHashtagsStream" topicsStreamedFrom="//@topics.0" topicsStreamedTo="//@topics.7"/>
  </services>
  <clients>
    <commands name="register-user" description="Creates a new user entity with the provided username and adds it to the database"/>
  </clients>
  <topics name="video-liked" kafkaValue="//@services.0/@dtos.3" producers="//@services.0/@kafkaProducers.0" streamInputs="//@services.2/@kafkaStreams.0">
    <kafkaKey name="videoId" type="UUID"/>
  </topics>
  <topics name="video-disliked" kafkaValue="//@services.0/@dtos.3" producers="//@services.0/@kafkaProducers.0">
    <kafkaKey name="videoId" type="UUID"/>
  </topics>
  <topics name="video-posted" kafkaValue="//@services.0/@dtos.3" consumers="//@services.1/@kafkaConsumers.0" producers="//@services.0/@kafkaProducers.0">
    <kafkaKey name="videoId" type="UUID"/>
  </topics>
  <topics name="video-viewed" kafkaValue="//@services.0/@dtos.3" consumers="//@services.1/@kafkaConsumers.0" producers="//@services.0/@kafkaProducers.0">
    <kafkaKey name="videoId" type="UUID"/>
  </topics>
  <topics name="user-registered" kafkaValue="//@services.0/@dtos.2" consumers="//@services.1/@kafkaConsumers.1" producers="//@services.0/@kafkaProducers.1">
    <kafkaKey name="userName" type="String"/>
  </topics>
  <topics name="user-subscribed" kafkaValue="//@services.1/@dtos.0" producers="//@services.1/@kafkaProducers.0">
    <kafkaKey name="userName" type="String"/>
  </topics>
  <topics name="user-unsubscribed" kafkaValue="//@services.1/@dtos.0" producers="//@services.1/@kafkaProducers.0">
    <kafkaKey name="userName" type="String"/>
  </topics>
  <topics name="trending-hashtags" isStreamOutputTopic="true" consumers="//@services.2/@kafkaConsumers.0" streamOutputs="//@services.2/@kafkaStreams.0"/>
</System>
