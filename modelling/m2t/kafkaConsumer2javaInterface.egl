package [%=packageName%];
import org.apache.kafka.clients.consumer.ConsumerRecord;
import java.util.List;
import java.util.UUID;
[%for (microservice in kc.eContainer.eContainer.services){%]
import com.eng2.assessment.generated.[%=microservice.name.getMicroserviceAcronym()%].dto.*;
[%}%]

public interface I[%=kc.name%] {
  [%for (topic in kc.topicsReadFrom){%]
  [%if(kc.isBatch){%]
  	void consume[%=topic.name.kebabToCamelCase()%]Messages(List<ConsumerRecord<[%=topic.kafkaKey.type%], [%=topic.kafkaValue.name%]>> records);
  [%}%]
  [%else{%]
  void consume[%=topic.name.kebabToCamelCase()%]Message([%=topic.kafkaKey.type%] [%=topic.kafkaKey.name%], [%=topic.kafkaValue.name%] value);
  [%}%]
  [%}%]
}



[%
operation String kebabToCamelCase(){
	return self.split("-").collect(it | it.ftuc()).concat();
}

operation String getMicroserviceAcronym(){
    return self.split("-").collect(it | it.characterAt(0)).concat();
}
%]