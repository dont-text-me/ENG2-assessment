import io.micronaut.configuration.kafka.annotation.KafkaClient;
import io.micronaut.configuration.kafka.annotation.KafkaKey;
import io.micronaut.configuration.kafka.annotation.Topic;
import java.util.UUID;

@KafkaClient
public interface [%=kp.name%] {
  [%for (topic in kp.topicsWrittenTo){%]
  	@Topic("[%=topic.name%]")
  	void produce[%=topic.name.kebabToCamelCase()%]Message(@KafkaKey [%=topic.kafkaKey.type%] [%=topic.kafkaKey.name%], [%=topic.kafkaValue.name%] value);
  [%}%]
}



[%
operation String kebabToCamelCase(){
	return self.split("-").collect(it | it.ftuc()).concat();
}
%]